upstream vue {
  server client:8080;
}

server {
    listen 80;
    server_name fv.taiker.space;
    server_tokens off;

    # Pass this particular URL off to certbot, to authenticate HTTPS certificates
    location '/.well-known/acme-challenge' {
        default_type "text/plain";
        proxy_pass http://localhost:1337;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen              443 ssl;
    server_name         fv.taiker.space;
    ssl_certificate     /etc/letsencrypt/live/fv.taiker.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fv.taiker.space/privkey.pem;

    location / {
        proxy_pass         http://vue;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}


server {
    listen 80;
    server_name api.fv.taiker.space;
    server_tokens off;

    # Pass this particular URL off to certbot, to authenticate HTTPS certificates
    location '/.well-known/acme-challenge' {
        default_type "text/plain";
        proxy_pass http://localhost:1337;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen              443 ssl;
    server_name         api.fv.taiker.space;
    ssl_certificate     /etc/letsencrypt/live/api.fv.taiker.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.fv.taiker.space/privkey.pem;

    location / {

        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        proxy_pass http://api:8000;
        proxy_redirect   off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}